{"version":3,"sources":["webpack://src/index.css","webpack://src/App.scss","webpack://src/components/styles/Nav.scss","webpack://src/components/styles/Form.scss","webpack://src/components/styles/Profile.scss","webpack://src/components/styles/Items.scss","webpack://src/components/styles/Inbox.scss","webpack://src/components/styles/breakpoints.scss"],"names":[],"mappings":"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","file":"main.1881b270.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","\n\nLink{\n    text-decoration: none;\n}\n\n","/* Position and sizing of burger button */\n.bm-burger-button {\n  position: fixed;\n  width: 36px;\n  height: 30px;\n  right: 36px;\n  top: 36px;\n}\n\n/* Color/shape of burger icon bars */\n.bm-burger-bars {\n  background: #373a47;\n}\n\n/* Color/shape of burger icon bars on hover*/\n.bm-burger-bars-hover {\n  background: #a90000;\n}\n\n/* Position and sizing of clickable cross button */\n.bm-cross-button {\n  height: 24px;\n  width: 24px;\n}\n\n/* Color/shape of close button cross */\n.bm-cross {\n  background: #bdc3c7;\n}\n\n/*\nSidebar wrapper styles\nNote: Beware of modifying this element as it can break the animations - you should not need to touch it in most cases\n*/\n.bm-menu-wrap {\n  position: fixed;\n  height: 100%;\n}\n\n/* General sidebar styles */\n.bm-menu {\n  background: #373a47;\n  padding: 2.5em 1.5em 0;\n  font-size: 1.15em;\n}\n\n/* Morph shape necessary with bubble or elastic */\n.bm-morph-shape {\n  fill: #373a47;\n}\n\n/* Wrapper for item list */\n.bm-item-list {\n  color: #b8b7ad;\n  padding: 0.8em;\n}\n\n/* Individual item */\n.bm-item {\n  display: inline-block;\n}\n\n/* Styling of overlay */\n.bm-overlay {\n  background: rgba(0, 0, 0, 0.3);\n}\n\n#nav__btn{\n  background-color: transparent;\n  .nav__btn__text{\n   color: white;\n  }\n}",".form__container, .chat__noChat {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    min-height: 100vh;\n}\n\n.form__form {\n    border-radius: 10%;\n    padding: 40px 40px 0 40px;\n}\n\n.form__button {\n    width: 100%;\n}\n\n.form__right {\n    text-align: right;\n    float: right;\n    padding: 20px 50px 0 0;\n}\n\n\n\n.form__alert {\n    color: #fa5246;\n    font-weight: 800;\n    padding-left: 5px;\n}\n\n.form__available {\n    color: #2cb67d;\n    font-weight: 800;\n    padding-left: 5px;\n}\n\n.form__testMode__container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10px;\n    padding: 0 40px 0 40px;\n\n}\n\n\n.form__edit__container{\n    margin: 10px 0 10px 0 !important;\n}","@import \"./breakpoints.scss\";\n\n// Profile\n\n\n.profile__bg {\n\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  height: 500px;\n  width: 100%;\n  filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.6));\n  margin-bottom: 50px;\n\n  @include media(\"<=phone\") {\n    background-repeat: no-repeat;\n    background-size: cover ;\n    background-position: center;\n\n    height: 500px;\n    width: 100%;\n    filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.6));\n    margin-bottom: 50px;\n  }\n}\n\n.profile__top {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .profile__photo {\n    margin-top: 150px !important;\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n  }\n\n  .profile__top__header {\n    color: white !important;\n    font-weight: 800 !important;\n    text-shadow:\n      1px 0 0 black,\n      0 1px 0 black,\n      -1px 0 0 black,\n      0 -1px 0 black\n  }\n}\n\n.profile__item {\n  padding: 10px 0 15px 0;\n\n}\n\n\n.profile__btn__container {\n  flex-direction: column;\n\n  a {\n    text-decoration: none;\n    color: white !important;\n    margin-bottom: 15px;\n  }\n}\n\n.userPublic__btn__container {\n  margin-bottom: 5px;\n}","@import \"./breakpoints.scss\";\n\n\n//Random items\n\n.random__image {\n    // width:100%;\n    object-fit: contain;\n    height: 400px;\n\n    @include media(\"<=phone\") {\n        height: 300px;\n    }\n}\n\n#random__text {\n    font-size: 24px;\n\n    @include media(\"<=phone\") {\n        font-size: 14px;\n        width: 30%;\n    }\n}\n\n// Latest\n.items__container {\n    margin-top: 50px !important;\n}\n\n.latest__grid {\n    @include media(\"<=phone\") {\n        left: 10%\n    }\n}\n\n.latest__image {\n    max-height: 300px;\n}\n\n// Location\n\n.location__header {\n    margin-left: 20px;\n    padding-bottom: 30px;\n\n    @include media(\"<=phone\") {\n        text-align: center;\n        margin-bottom: 50px;\n    }\n}\n\n\n\n// item detail\n.itemDetail__img__container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.itemDetail__img {\n    filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.6));\n    object-fit: contain;\n    max-height: 500px;\n\n    @include media(\"<=phone\") {\n        width: 100%;\n        filter: drop-shadow(5px 5px 5px rgba(0, 0, 0, 0.6));\n    }\n}\n\n.itemDetail__location {\n    font-size: 20px;\n\n    @include media(\"<=phone\") {\n        font-size: 15px;\n    }\n}\n\n.itemDetail__description {\n    margin-top: 10px;\n}\n\n.itemDetail__btn {\n    margin-top: 15px;\n}\n\n.goback {\n    background-color: Transparent;\n    background-repeat: no-repeat;\n    border: none;\n    cursor: pointer;\n    overflow: hidden;\n    outline: none;\n    animation: slide 2s ease-in-out .5s infinite alternate;\n    width: 100%;\n}\n\n.goback:hover {\n\n    transform: translateY(3px);\n}\n\n.goback:active {\n\n    transform: translateY(6px);\n    transition-duration: .1s;\n}\n\n// Item List\n.itemList__container {\n    margin-top: 50px;\n}","@import \"./breakpoints.scss\";\n\n\n.inbox__container {\n\n    width: 750px;\n    height: 800px;\n    background: #eff3f7;\n    margin: 90px auto 0 auto;\n    font-size: 0;\n    border-radius: 5px;\n    overflow: hidden;\n\n    @include media(\"<=phone\") {\n        display: none;\n\n    }\n}\n\n.inbox__header {\n    padding: 20px 0;\n    margin-bottom: 10px;\n    border-bottom: 1px solid white;\n\n    text-align: center;\n    button{\n        h2{\n            color: white;\n        }\n    }\n}\n\n.inbox__fromList__user, .inbox__mobile__fromList {\n    padding-left: 10px !important;\n    margin-left: 10px !important;\n}\n\n.inbox__chatBox__header {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.inbox__chatBox__revoke {\n    display: flex;\n    flex-direction: column;\n\n    p {\n        font-size: 10px;\n        color: #2cb67d;\n    }\n}\n\n.inbox__mobile__container {\n    display: none;\n\n    @include media(\"<=phone\") {\n        display: block;\n        margin-top: 100px !important;\n        \n    }\n}\n\n.inbox__mobile__header {\n    @include media(\"<=phone\") {\n        background-color: #3b3e49;\n        width: 100%;\n        height: 50px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n    }\n\n    h1 {\n        @include media(\"<=phone\") {\n            color: #ffff;\n        }\n    }\n}\n\n\n\n.inbox__mobile__fromList{\n    display: flex !important;\n    justify-content: flex-start !important;\n\n}\n\n.inbox__mobile__fromList__content{\n    display: flex;\n    flex-direction: column;\n\n}\n\n.chat__mobile__header{\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid grey;\n}\n.inbox__chatBox__header__btn{\n    padding-left:10px;\n    button{\n        padding-left: 10px;\n    }\n}\n\n.chat__mobile__container {\n    display: none;\n\n    @include media(\"<=phone\") {\n        display: block;\n    }\n}\n\n.inbox__btn {\n    p {\n        font-size: 16px;\n        color: white;\n    }\n}\n\n.inbox__userList__text {\n    color: white;\n    font-size: 11px;\n}\n\n\n.inbox__mobile__btn,\n.inbox__btn {\n    background-color: Transparent;\n    background-repeat: no-repeat;\n    border: none;\n    cursor: pointer;\n    overflow: hidden;\n    outline: none;\n}\n\n.inbox__userList {\n    width: 260px;\n    height: 800px;\n    background-color: #3b3e49;\n    display: inline-block;\n    font-size: 15px;\n    vertical-align: top;\n}\n\n.inbox__chatBox {\n    width: 490px;\n    height: 800px;\n    display: inline-block;\n    font-size: 15px;\n    vertical-align: top;\n}\n\n.inbox__chatBox__container {\n    padding-left: 0;\n    margin: 0;\n    list-style-type: none;\n    overflow-y: scroll;\n    height: 535px;\n    border-top: 2px solid #fff;\n    border-bottom: 2px solid #fff;\n\n    .inbox__me,\n    .inbox__you {\n        padding: 10px 30px;\n    }\n\n    .inbox__me {\n        text-align: right;\n    }\n\n    .inbox__me {\n        .inbox__text {\n            background-color: #6fbced;\n        }\n\n        .inbox__triangle {\n            border-color: transparent transparent #6fbced transparent;\n            margin-left: 375px;\n            margin-right: 10px\n        }\n    }\n\n    .inbox__you {\n        .inbox__text {\n            background-color: #58b666;\n\n        }\n\n        .inbox__triangle {\n            border-color: transparent transparent #58b666 transparent;\n            margin-left: 15px;\n        }\n    }\n\n    h2 {\n        display: inline-block;\n        font-size: 13px;\n        font-weight: normal;\n    }\n\n    .inbox__entete {\n        margin-bottom: 5px;\n\n    }\n\n    .inbox__triangle {\n        width: 0;\n        height: 0;\n        border-style: solid;\n        border-width: 0 10px 10px 10px;\n    }\n\n    .inbox__text {\n        padding: 20px;\n        color: #fff;\n        line-height: 25px;\n        max-width: 90%;\n        display: inline-block;\n        text-align: left;\n        border-radius: 5px;\n    }\n}\n\n.inbox__messageForm {\n    height: 155px;\n    padding: 20px 30px 10px 20px;\n    border-top:1px solid grey \n\n}\n\n.message__form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.inbox__messageForm__input {\n    resize: none;\n    border: none;\n    // display:block;\n    width: 100%;\n    height: 80px;\n    border-radius: 3px;\n    padding: 20px 10px 20px 20px;\n    font-size: 13px;\n}\n\n.inbox__messageForm__btn {\n    text-decoration: none;\n    vertical-align: top;\n    display: inline-block;\n}\n\n\n\n.chat__noChat__text {\n    text-align: center;\n}\n","$breakpoints: (\n  \"phone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n"]}