{"version":3,"sources":["config.js","components/Nav.js","components/SignUp.js","components/SignIn.js","components/Landing.js","components/UserProfile.js","components/UserPublic.js","components/UserCreate.js","components/UserEdit.js","components/ItemUpload.js","components/ItemsRadom.js","components/ItemsLatest.js","components/ItemsLocation.js","components/Home.js","components/SearchForm.js","components/ItemsList.js","components/ItemDetail.js","components/MessageForm.js","components/Chat.js","components/Inbox.js","components/ChatMobile.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","Nav","loggedInUser","onLogOut","useState","burger","setBurger","handleOnOpen","console","log","handleOnClose","right","className","to","onClick","_id","isOpen","SignUp","onSignUp","onUnmount","errorMessage","undefined","username","setUsername","email","setEmail","debounceSearchUsername","useRef","_","debounce","axios","post","withCredentials","then","response","data","updateUsernameQuery","debounceSearchEmail","updateEmailQuery","useEffect","current","Container","text","Grid","container","Column","Form","onSubmit","Field","required","type","name","onChange","e","target","value","toLowerCase","Button","animated","secondary","Content","hidden","Icon","visible","Message","negative","Header","SignIn","onSignIn","onTest","color","Landing","origin","destination","direction","index","scrollOverflow","sectionsColor","onLeave","this","bind","afterLoad","render","state","fullpageApi","id","columns","doubling","stackable","width","style","display","alignItems","src","alt","flexDirection","paddingTop","centered","height","textAlign","React","Component","UserProfile","onGoBack","onUpdate","user","setUser","get","profileStyle","backgroundImage","imageBg","marginTop","imageProfile","as","location","floated","bio","Divider","item","accepted","divided","Row","Item","Group","Image","image","Link","Meta","Description","description","ui","grid","marginBottom","props","match","sentHi","setSentHi","userId","params","hi","includes","sentHiValidation","catch","err","handleSendHi","UserCreate","onEditProfile","TextArea","Input","UserEdit","defaultValue","ItemUpload","onCreateItem","onEditItem","onDeleteItem","placeholder","control","ItemsRadom","items","randomItems","setRandomItems","max","min","newRandomItems","i","push","length","Math","floor","random","showArrows","showStatus","showThumbs","thumbWidth","infiniteLoop","autoPlay","map","ItemsLatest","latestItems","setLatestItems","sorted","sort","a","b","updatedAt","slice","Card","objectFit","extra","ItemsLocation","locationItems","setLocationItems","filter","Extra","avatar","circular","Home","Search","onQuickSearch","onSearch","relaxed","icon","link","ItemsList","SearchForm","ItemDetail","setItem","itemId","maxHeight","condition","MessageForm","onSend","event","Chat","initialChat","initialAccepted","selectedUser","chat","setChat","setAccepted","chatCheck","acceptedStatus","List","message","from","body","preventDefault","Inbox","onSelectedUserMobile","messages","setMessages","setSelectedUser","size","bodylength","receiver","setReceiver","selectedUserId","App","cloneItems","handleSignUp","password","setState","history","handleSignIn","error","handleTestMode","handleLogOut","handleUnmount","handleCleanError","handleEditProfile","imageProfFile","files","uploadProfForm","FormData","append","imageBgFile","uploadBgForm","responseProf","responseBg","newProfile","patch","handleCreateItem","imageFile","uploadForm","newItem","userData","handleEditItem","handleDeleteItem","delete","handleGoBack","goBack","handleQuickSearch","searchInput","filteredItems","startsWith","handleSearch","useInput","keyWord","handleSelectUserMobile","exact","path","routeProps","UserPublic","ChatMobile","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.641d855a.chunk.js","sourcesContent":["export const API_URL = \"https://from-everywhere.herokuapp.com/api\";\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { stack as Menu } from \"react-burger-menu\";\nimport { Icon, Button } from \"semantic-ui-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./styles/Nav.scss\";\n\nconst Nav = ({ loggedInUser, onLogOut }) => {\n  const [burger, setBurger] = useState(false);\n\n  const handleOnOpen = () =>{\n    if(!burger) {\n      setBurger(true)\n      console.log(burger);\n    }\n    \n  }\n\n  const handleOnClose = () => {\n    if(burger) {\n      setBurger(false)\n      console.log(burger);\n    }\n  };\n\n\n  return (\n\n    <>\n      {!loggedInUser ? (\n        <Menu right isOpen={burger}>\n          <Link to=\"/\" className=\"menu-item\" onClick={handleOnClose}>\n            Home\n          </Link>\n          {/* <Button className=\"profile__inbox goback \" animated id=\"nav__btn\">\n            <Button.Content hidden>\n              <FontAwesomeIcon icon={faHome} color=\"white\"/>\n            </Button.Content>\n            <Button.Content visible>\n              <p className=\"nav__btn__text\">Home</p>\n            </Button.Content>\n          </Button> */}\n\n          <Link to=\"/sign-up\" className=\"menu-item\" onClick={() =>{\n            handleOnOpen()\n            handleOnClose()\n          }}>\n            Signup\n          </Link>\n          <Link to=\"/sign-in\" className=\"menu-item\" onClick={() =>{\n            handleOnOpen()\n            handleOnClose()\n          }}>\n            Signin\n          </Link>\n        </Menu>\n      ) : (\n        <Menu right>\n          <p className=\"menu-item\">Search</p>\n          <Link to=\"/home\" className=\"menu-item\" onClick={() =>{\n            handleOnOpen()\n            handleOnClose()\n          }}>\n            Home\n          </Link>\n          <Link to={`/user/${loggedInUser._id}`} className=\"menu-item\" onClick={() =>{\n            handleOnOpen()\n            handleOnClose()\n          }}>\n            Account\n          </Link>\n          <Link to={`/inbox/${loggedInUser._id}`} className=\"menu-item\" onClick={() =>{\n            handleOnOpen()\n            handleOnClose()\n          }}>\n            Inbox\n          </Link>\n          <button onClick={onLogOut} className=\"menu-item\" onClick={() =>{\n            handleOnOpen()\n            handleOnClose()\n          }}>\n            Logout\n          </button>\n        </Menu>\n      )}\n    </>\n  );\n};\n\nexport default Nav;\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport {\n  Container,\n  Grid,\n  Button,\n  Message,\n  Form,\n  Icon,\n} from \"semantic-ui-react\";\n\nimport \"./styles/Form.scss\";\nimport { API_URL } from \"../config\";\n\nconst SignUp = ({ onSignUp, onUnmount, errorMessage }) => {\n  const [username, setUsername] = useState(undefined);\n  const [email, setEmail] = useState(undefined);\n\n  const updateUsernameQuery = (username) => {\n    // A search query api call.\n    axios\n      .post(\n        `${API_URL}/input-check/user`,\n        { username },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        switch (response.data) {\n          case \"isUser\":\n            setUsername(\"isUser\");\n            break;\n          default:\n            console.log(\"Available\");\n        }\n      });\n  };\n\n  const updateEmailQuery = (email) => {\n    // A search query api call.\n    console.log(email);\n\n    axios\n      .post(\n        `${API_URL}/input-check/email`,\n        { email },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        switch (response.data) {\n          case \"isEmail\":\n            setEmail(\"isEmail\");\n            break;\n          default:\n            console.log(\"Available\");\n        }\n      });\n  };\n\n  const debounceSearchUsername = useRef(\n    _.debounce((username) => {\n      updateUsernameQuery(username);\n    }, 1000)\n  );\n\n  const debounceSearchEmail = useRef(\n    _.debounce((email) => {\n      updateEmailQuery(email);\n    }, 1000)\n  );\n\n  useEffect(() => {\n    if (username) {\n      setUsername(username);\n      debounceSearchUsername.current(username);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (email) {\n      setEmail(email);\n      debounceSearchEmail.current(email);\n    }\n  }, [email]);\n\n  useEffect(() => {\n    return onUnmount;\n  }, []);\n\n  console.log(username, email);\n\n  return (\n    // <form onSubmit={onSignUp}>\n    //   <input\n    //     type=\"text\"\n    //     name=\"username\"\n    //     onChange={(e) => setUsername(e.target.value.toLowerCase())}\n    //   />\n    //   {username == \"\" || username == undefined ? (\n    //     \"\"\n    //   ) : username == \"isUser\" ? (\n    //     <p>Username is unavailable, please choose another!</p>\n    //   ) : (\n    //     <p>Username available!</p>\n    //   )}\n\n    //   <input\n    //     type=\"text\"\n    //     name=\"email\"\n    //     onChange={(e) => setEmail(e.target.value.toLowerCase())}\n    //   />\n    // {email == \"\" || email == undefined ? (\n    //   \"\"\n    // ) : email == \"isEmail\" ? (\n    //   <p>Email is unavailable, please choose another!</p>\n    // ) : (\n    //   <p>Email available!</p>\n    // )}\n    //   <input type=\"password\" name=\"password\" />\n\n    //   <button type=\"submit\">Sign up?</button>\n    //   {errorMessage ? (\n    //     <p style={{ color: \"red\", fontSize: \"20px\" }}>{errorMessage}</p>\n    //   ) : null}\n    // </form>\n    <div className=\"form__container\">\n      <Container text>\n        <Grid container>\n          <Grid.Column>\n            <Form onSubmit={onSignUp} className=\"form__form\">\n              <Form.Field required>\n                <label>Username</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  onChange={(e) => setUsername(e.target.value.toLowerCase())}\n                />\n              </Form.Field>\n              {username == \"\" || username == undefined ? (\n                \"\"\n              ) : username == \"isUser\" ? (\n                <p className=\"form__alert\">\n                  Username is unavailable, please choose another!\n                </p>\n              ) : (\n                <p className=\"form__available\">Username available!</p>\n              )}\n              <Form.Field required>\n                <label>Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={(e) => setEmail(e.target.value.toLowerCase())}\n                />\n              </Form.Field>\n              {email == \"\" || email == undefined ? (\n                \"\"\n              ) : email == \"isEmail\" ? (\n                <p className=\"form__alert\">\n                  Email is unavailable, please choose another!\n                </p>\n              ) : (\n                <p className=\"form__available\">Email available!</p>\n              )}\n\n              <Form.Field required>\n                <label>Password</label>\n                <input type=\"password\" name=\"password\" />\n              </Form.Field>\n\n              <Button className=\"form__button goback\" animated type=\"submit\" secondary>\n                <Button.Content hidden>\n                  <Icon name=\"sign-in\" />\n                </Button.Content>\n                <Button.Content visible>Sign up</Button.Content>\n              </Button>\n\n              {errorMessage ? (\n                <Message negative>\n                  <Message.Header>{errorMessage}</Message.Header>\n                  <p>Please try again.</p>\n                </Message>\n              ) : null}\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Button,\n  Message,\n  Form,\n  Icon,\n} from \"semantic-ui-react\";\n\nimport \"./styles/Form.scss\";\n\nconst SignIn = ({ onSignIn, onUnmount, onChange, errorMessage, onTest }) => {\n  useEffect(() => {\n    return onUnmount;\n  }, []);\n  return (\n    <div className=\"form__container\">\n      <Container text>\n        <Grid container>\n          <Grid.Column>\n            <Form onSubmit={onSignIn} className=\"form__form\">\n              <Form.Field>\n                <label>Email</label>\n                <input type=\"email\" name=\"email\" onChange={onChange} />\n              </Form.Field>\n              <Form.Field>\n                <label>Password</label>\n                <input type=\"password\" name=\"password\" onChange={onChange} />\n              </Form.Field>\n\n              <Button\n                className=\"form__button goback\"\n                animated\n                type=\"submit\"\n                secondary\n              >\n                <Button.Content hidden>\n                  <Icon name=\"sign-in\" />\n                </Button.Content>\n                <Button.Content visible>Sign in</Button.Content>\n              </Button>\n\n              {errorMessage ? (\n                <>\n                  <Message negative>\n                    <Message.Header>{errorMessage}</Message.Header>\n                    <p>Please try again.</p>\n                  </Message>\n                </>\n              ) : null}\n            </Form>\n\n            <div className=\"form__testMode__container goback\">\n              <Button\n                className=\"form__button \"\n                animated\n                onClick={onTest}\n                color=\"linkedin\"\n              >\n                <Button.Content hidden>\n                  <Icon name=\"wrench\" />\n                </Button.Content>\n                <Button.Content visible>Test Mode</Button.Content>\n              </Button>\n            </div>\n\n          </Grid.Column>\n        </Grid>\n\n        <div className=\"form__right\">\n          <Link to=\"/sign-up\">Sign up?</Link>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport \"fullpage.js/vendors/scrolloverflow\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Button,\n  Message,\n  Form,\n  Icon,\n  TextArea,\n  Input,\n  Select,\n} from \"semantic-ui-react\";\n\nimport \"./styles/Landing.scss\";\n\nclass Landing extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"white\", \"white\", \"white\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div className=\"section section1\">\n                <Container>\n                  <div className=\"sec1__container\">\n                    <h1>from everywhere</h1>\n                    <div className=\"sec1__content\">\n                      <Grid columns={2} container doubling stackable>\n                        <Grid.Column\n                          width={10}\n                          style={{ display: \"flex\", alignItems: \"center\" }}\n                        >\n                          <p>\n                            Lorem, ipsum dolor sit amet consectetur adipisicing\n                            elit. Facere, quis dicta ipsa ipsam omnis nesciunt\n                            impedit quidem quibusdam est nemo? Natus, vel!\n                            Accusantium rerum quaerat voluptate quo, quos porro\n                            aperiam!\n                          </p>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                          <img\n                            src=\"https://res.cloudinary.com/djct87vbj/image/upload/v1605094483/original_cb6fc0b556c5151ccb1480c27f96a81c_wcreh2.jpg\"\n                            alt=\"landing__img01\"\n                          />\n                        </Grid.Column>\n                      </Grid>\n                      <p className=\"sec1__content__mb\">\n                        You can start from everywhere.\n                      </p>\n                    </div>\n                  </div>\n                </Container>\n              </div>\n              <div className=\"section\">\n                <Container>\n                  <div className=\"sec2__container\">\n                    <div className=\"sec2__content\">\n                      <Grid columns={2} container doubling stackable>\n                        <Grid.Column width={9}>\n                          <img\n                            src=\"https://res.cloudinary.com/djct87vbj/image/upload/v1605097867/Snapseed_mewpfq.jpg\"\n                            alt=\"landing__img01\"\n                          />\n                        </Grid.Column>\n                        <Grid.Column\n                          width={7}\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            paddingTop: \"100px\",\n                          }}\n                          id=\"sec2__content__adjust\"\n                        >\n                          <h2>\n                            Your thing may help others, <br />\n                            you may also be helped by others.\n                          </h2>\n                          <p>\n                            from everywhere is inspired by a Japanese folk tale\n                            called \"The straw millionaire\". <br />\n                            Post your item that is not to be used anymore, and\n                            exchange it with others. <br />\n                            Keep exchanging, you may get something you have\n                            never expected in the end.\n                          </p>\n                        </Grid.Column>\n                      </Grid>\n                      <div className=\"sec2__content__mb\">\n                        <h2>\n                          Your thing may help others, <br />\n                          you may also be helped by others.\n                        </h2>\n                        <p>\n                          from everywhere is inspired by a Japanese folk tale\n                          called \"The straw millionaire\". <br />\n                          Post your item that is not to be used anymore, and\n                          exchange it with others. <br />\n                          Keep exchanging, you may get something you have never\n                          expected in the end.\n                        </p>\n                        <img\n                          src=\"https://res.cloudinary.com/djct87vbj/image/upload/v1605097867/Snapseed_mewpfq.jpg\"\n                          alt=\"landing__img01\"\n                          className=\"sec2__content__mb\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </Container>\n              </div>\n              <div className=\"section\">\n                <Container>\n                  <Grid centered columns={1}>\n                    <div className=\"sec3__container\"></div>\n                    <div className=\"slide sec3__content\">\n                      <img\n                        src=\"./images/landing__02.svg\"\n                        alt=\"landing__img01\"\n                      />\n                      <h3>Upload your item</h3>\n                    </div>\n                    <div className=\"slide sec3__content\">\n                      <img\n                        src=\"./images/landing__03.svg\"\n                        alt=\"landing__img01\"\n                        style={{ height: \"300px\" }}\n                      />\n                      <h3>Find item</h3>\n                    </div>\n                    <div className=\"slide sec3__content\">\n                      <img\n                        src=\"./images/landing__04.svg\"\n                        alt=\"landing__img01\"\n                      />\n                      <h3>Send Message</h3>\n                    </div>\n                    <div className=\"slide sec3__content\">\n                      <img\n                        src=\"./images/landing__05.svg\"\n                        alt=\"landing__img01\"\n                      />\n                      <h3>Matching</h3>\n                    </div>\n                    <div className=\"slide sec3__content\">\n                      <img\n                        src=\"./images/landing__06.svg\"\n                        alt=\"landing__img01\"\n                      />\n                      <h3>Wait for the item</h3>\n                    </div>\n                  </Grid>\n                </Container>\n              </div>\n              <div className=\"section\">\n                <Container>\n                  <div className=\"sec4__container\">\n                    <div className=\"sec4__content\">\n                      <Grid columns={1} container doubling centered>\n                        <Grid.Column textAlign=\"center\">\n                          <h1>Start from everywhere</h1>\n                        </Grid.Column>\n                        <div className=\"sec4__btns\">\n                          <Link to=\"/sign-up\">\n                            <Button\n                              className=\"form__button goback\"\n                              animated\n                              type=\"submit\"\n                              secondary\n                            >\n                              <Button.Content hidden>\n                                <Icon name=\"sign-in\" />\n                              </Button.Content>\n                              <Button.Content visible>Sign up</Button.Content>\n                            </Button>\n                          </Link>\n                          <Link to=\"/sign-in\">\n                            <Button\n                              className=\"form__button goback\"\n                              animated\n                              type=\"submit\"\n                              secondary\n                            >\n                              <Button.Content hidden>\n                                <Icon name=\"sign-in\" />\n                              </Button.Content>\n                              <Button.Content visible>Sign ip</Button.Content>\n                            </Button>\n                          </Link>\n                        </div>\n                      </Grid>\n                    </div>\n                  </div>\n                </Container>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Button,\n  Item,\n  Divider,\n} from \"semantic-ui-react\";\nimport \"./styles/Profile.scss\";\n\nimport { API_URL } from \"../config\";\n\nconst UserProfile = ({ loggedInUser, onGoBack, onUpdate }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(`${API_URL}/user/${loggedInUser._id}`, { withCredentials: true })\n      .then((response) => {\n        setUser(response.data);\n      });\n  }, []);\n\n  const handleUpdate = () => {\n    axios\n      .post(\n        `${API_URL}/user/${loggedInUser._id}/update-status`,\n        {},\n        { withCredentials: true }\n      )\n      .then((response) => {\n        console.log(response.data);\n      });\n  };\n\n  const profileStyle = {\n    backgroundImage:\n      user && user.imageBg ? `url(${user.imageBg})` : loggedInUser.imageBg,\n  };\n\n  return (\n    <div>\n      {!user ? (\n        <p>Loading</p>\n      ) : (\n        <>\n          <Container style={{ marginTop: \"30px\" }}>\n            <div className=\"profile__bg\" style={profileStyle}>\n              <Grid container columns={1} stackable textAlign=\"center\">\n                <div className=\"profile__top\">\n                  <img\n                    src={user.imageProfile}\n                    alt=\"profile-image\"\n                    className=\"profile__photo\"\n                  />\n                  <Header as=\"h1\" className=\"profile__top__header\">\n                    {user.username}\n                  </Header>\n                </div>\n              </Grid>\n            </div>\n          </Container>\n\n          <Container text>\n            {user.location ? (\n              <Grid>\n                <Grid.Column floated=\"left\" width={5}>\n                  <p className=\"itemDetail__location\">\n                    <Icon name=\"map marker alternate\" />\n                    {user.location}\n                  </p>\n                </Grid.Column>\n                <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                  <Link to=\"/user/edit\">Edit</Link>\n                </Grid.Column>\n              </Grid>\n            ) : (\n              <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                <Grid.Column floated=\"left\" width={5}>\n                  <p className=\"itemDetail__location\">\n                    <Icon name=\"map marker alternate\" />\n                    <span>No location provided</span>\n                  </p>\n                </Grid.Column>\n                <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                  <Link to=\"/user/edit\">Edit</Link>\n                </Grid.Column>\n              </Grid.Column>\n            )}\n\n            <p className=\"itemDetail__description\">{user.bio}</p>\n            <Container>\n              <Divider />\n            </Container>\n            <div className=\"profile__item\">\n              {!user.item ? (\n                <>\n                  <p>Please upload your item</p>\n                  <Link to=\"/upload-item\">Upload</Link>\n                </>\n              ) : (\n                <div>\n                  {user && user.item.accepted ? (\n                    <>\n                      <p>Have you received the item?</p>\n                      <Link to=\"/upload-item\">\n                        <button onClick={handleUpdate}>Yes!</button>\n                      </Link>\n                    </>\n                  ) : (\n                    <Grid columns={1} container divided=\"vertically\" stackable>\n                      <Grid.Row>\n                        <Item.Group divided>\n                          <Item>\n                            <Item.Image\n                              src={user.item.image}\n                              as={Link}\n                              to={`/item/${user.item._id}`}\n                            />\n                            <Item.Content>\n                              <Item.Header\n                                as={Link}\n                                to={`/item/${user.item._id}`}\n                              >\n                                {user.item.name}\n                              </Item.Header>\n                              <Item.Meta>\n                                <Link to=\"/upload-item\">Edit</Link>\n                              </Item.Meta>\n                              <Item.Description>\n                                {user.item.description}\n                              </Item.Description>\n                            </Item.Content>\n                          </Item>\n                        </Item.Group>\n                      </Grid.Row>\n                    </Grid>\n                  )}\n                </div>\n              )}\n            </div>\n          </Container>\n\n          <Grid columns={1} ui centered grid stackable>\n            <Grid.Row>\n              <div className=\"itemDetail__btn profile__btn__container\">\n                <Link to=\"/inbox\" >\n                  <Button className=\"profile__inbox goback\" animated secondary style={{marginBottom:'10px'}}>\n                    <Button.Content hidden>\n                      <Icon name=\"mail outline large\" />\n                    </Button.Content>\n                    <Button.Content visible>Inbox</Button.Content>\n                  </Button>\n                </Link>\n\n                <Button\n                  className=\"profile__inbox goback\"\n                  animated\n                  secondary\n                  onClick={() => {\n                    onGoBack();\n                  }}\n                >\n                  <Button.Content hidden>\n                    <Icon name=\"hand point left outline large\" />\n                  </Button.Content>\n                  <Button.Content visible>Go Back</Button.Content>\n                </Button>\n              </div>\n            </Grid.Row>\n          </Grid>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Button,\n  Item,\n  Divider,\n} from \"semantic-ui-react\";\nimport \"./styles/Profile.scss\";\nimport { API_URL } from \"../config\";\n\nconst UserProfile = (props) => {\n  const { loggedInUser, match, onGoBack } = props;\n  const [user, setUser] = useState(null);\n  const [sentHi, setSentHi] = useState(false);\n  let userId = match.params.userId;\n  useEffect(() => {\n    axios.get(`${API_URL}/user/${userId}`).then((response) => {\n      setUser(response.data);\n      console.log(response.data.item);\n      if (response.data.item.hi) {\n        if (response.data.item.hi.includes(loggedInUser._id)) {\n          setSentHi(true);\n        }\n      }\n    });\n  }, []);\n\n  const handleSendHi = (userId) => {\n    console.log(userId);\n    axios\n      .post(`${API_URL}/send-hi/${userId}`, {}, { withCredentials: true })\n      .then((response) => {\n        console.log(\"This is send hi\", response.data);\n        setSentHi(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let sentHiValidation = !sentHi ? (\n    // <Button\n    //   onClick={() => {\n    //     handleSendHi(userId);\n    //   }}\n    // >\n    //   Send Hi\n    // </Button>\n    <div className=\"userPublic__btn__container\">\n      <Button\n        className=\"profile__inbox goback \"\n        animated\n        secondary\n        onClick={() => {\n          handleSendHi(userId);\n        }}\n      >\n        <Button.Content hidden>\n          <Icon name=\"send large\" />\n        </Button.Content>\n        <Button.Content visible>Send Hi</Button.Content>\n      </Button>\n    </div>\n  ) : (\n    <p className=\"form__available\">Successfully sent</p>\n  );\n\n  const profileStyle = {\n    backgroundImage:\n      user && user.imageBg ? `url(${user.imageBg})` : loggedInUser.imageBg,\n  };\n\n  return (\n    <div>\n      {!user ? (\n        <p>Loading</p>\n      ) : user._id == loggedInUser._id ? (\n        <Redirect to={`/user/${user._id}`} />\n      ) : (\n        <>\n          {/* <div>\n            <img src={user.image} alt=\"profile-image\" />\n            <p>{user.username}</p>\n            <p>{user.bio}</p>\n            <p>{user.location}</p>\n          </div>\n          {user.item.accepted ? (\n            <p>Sorry the item no longer available...</p>\n          ) : (\n            sentHiValidation\n          )}\n\n          {}\n\n          <button\n            onClick={() => {\n              onGoBack();\n            }}\n          >\n            X\n          </button> */}\n          <Container style={{ marginTop: \"30px\" }}>\n            <div className=\"profile__bg \" style={profileStyle}>\n              <div className=\"profile__bg \">\n                <Grid container columns={1} stackable textAlign=\"center\">\n                  <div className=\"profile__top\">\n                    <img\n                      src={user.imageProfile}\n                      alt=\"profile-image\"\n                      className=\"profile__photo\"\n                    />\n                    <Header as=\"h1\" className=\"profile__top__header\">\n                      {user.username}\n                    </Header>\n                  </div>\n                </Grid>\n              </div>\n            </div>\n          </Container>\n\n          <Container text>\n            {user.location ? (\n              <Grid>\n                <Grid.Column floated=\"left\" width={5}>\n                  <p className=\"itemDetail__location\">\n                    <Icon name=\"map marker alternate\" />\n                    {user.location}\n                  </p>\n                </Grid.Column>\n              </Grid>\n            ) : (\n              <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                <Grid.Column floated=\"left\" width={5}>\n                  <p className=\"itemDetail__location\">\n                    <Icon name=\"map marker alternate\" />\n                    <span>No location provided</span>\n                  </p>\n                </Grid.Column>\n              </Grid.Column>\n            )}\n\n            <p className=\"itemDetail__description\">{user.bio}</p>\n\n            <Container>\n              <Divider />\n            </Container>\n\n            <div>\n              {!user.item ? (\n                <>\n                  <p>There's no item uploaded yet...</p>\n                </>\n              ) : (\n                <Grid columns={1} container divided=\"vertically\" stackable>\n                  <Grid.Row>\n                    <Item.Group divided>\n                      <Item>\n                        <Item.Image\n                          src={user.item.image}\n                          as={Link}\n                          to={`/item/${user.item._id}`}\n                        />\n                        <Item.Content>\n                          <Item.Header as={Link} to={`/item/${user.item._id}`}>\n                            {user.item.name}\n                          </Item.Header>\n\n                          <Item.Description>\n                            {user.item.description}\n                          </Item.Description>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Grid.Row>\n                </Grid>\n              )}\n            </div>\n          </Container>\n          <Container>\n            <Grid columns={1} ui centered grid stackable>\n              <Grid.Row>\n                <div className=\"itemDetail__btn profile__btn__container\">\n                  {user.item.accepted ? (\n                    <p className=\"form__alert\">\n                      Sorry the item no longer available...\n                    </p>\n                  ) : (\n                    sentHiValidation\n                  )}\n                  <Button\n                    className=\"profile__inbox goback\"\n                    animated\n                    secondary\n                    onClick={() => {\n                      onGoBack();\n                    }}\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"hand point left outline large\" />\n                    </Button.Content>\n                    <Button.Content visible>Go Back</Button.Content>\n                  </Button>\n                </div>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Button,\n  Message,\n  Form,\n  Icon,\n  TextArea,\n  Input,\n} from \"semantic-ui-react\";\nimport \"./styles/Form.scss\";\n\nconst UserCreate = ({ onEditProfile, loggedInUser }) => {\n  return (\n    <div>\n      <div className=\"form__container\">\n        <Container text>\n          <Grid container>\n            <Grid.Column>\n              <Form onSubmit={onEditProfile} className=\"form__form\">\n                <Form.Field>\n                  <label>Bio</label>\n                  <TextArea type=\"text\" name=\"bio\" />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Location</label>\n                  <input type=\"text\" name=\"location\" />\n                </Form.Field>\n\n                <Grid container columns={2} stackable>\n                  <Grid.Column>\n                    <Form.Field>\n                      <label>Profile Image</label>\n                      <Input type=\"file\" name=\"imageProfile\" />\n                    </Form.Field>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Form.Field>\n                      <label>Background Image</label>\n                      <Input type=\"file\" name=\"imageBg\" />\n                    </Form.Field>\n                  </Grid.Column>\n                </Grid>\n\n                <div className=\"itemDetail__btn profile__btn__container\">\n                  <Button\n                    className=\"form__button goback\"\n                    animated\n                    type=\"submit\"\n                    secondary\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"edit outline\" />\n                    </Button.Content>\n                    <Button.Content visible>Proceed</Button.Content>\n                  </Button>\n                </div>\n              </Form>\n\n              <div className=\"form__testMode__container goback\">\n                <Link to={`/user/${loggedInUser}`} style={{width:'100%'}}>\n                  <Button\n                    className=\"form__button \"\n                    animated\n                    type=\"submit\"\n                    secondary\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"forward \" />\n                    </Button.Content>\n                    <Button.Content visible>Skip for now</Button.Content>\n                  </Button>\n                </Link>\n              </div>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default UserCreate;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport {\n  Container,\n  Grid,\n  Button,\n  Message,\n  Form,\n  Icon,\n  TextArea,\n  Input,\n} from \"semantic-ui-react\";\nimport \"./styles/Form.scss\";\nimport { API_URL } from \"../config\";\n\nconst UserEdit = ({ onEditProfile, loggedInUser, onUnmount, onGoBack }) => {\n  const [username, setUsername] = useState(undefined);\n  const [email, setEmail] = useState(undefined);\n\n  const updateUsernameQuery = (username) => {\n    // A search query api call.\n    axios\n      .post(\n        `${API_URL}/input-check/edit-user`,\n        { username },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        switch (response.data) {\n          case \"isUser\":\n            setUsername(\"isUser\");\n            break;\n          default:\n            console.log(\"Available\");\n        }\n      });\n  };\n\n  const updateEmailQuery = (email) => {\n    // A search query api call.\n    console.log(email);\n\n    axios\n      .post(\n        `${API_URL}/input-check/edit-email`,\n        { email },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        switch (response.data) {\n          case \"isEmail\":\n            setEmail(\"isEmail\");\n            break;\n          default:\n            console.log(\"Available\");\n        }\n      });\n  };\n\n  const debounceSearchUsername = useRef(\n    _.debounce((username) => {\n      updateUsernameQuery(username);\n    }, 1000)\n  );\n\n  const debounceSearchEmail = useRef(\n    _.debounce((email) => {\n      updateEmailQuery(email);\n    }, 1000)\n  );\n\n  useEffect(() => {\n    if (username) {\n      setUsername(username);\n      debounceSearchUsername.current(username);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (email) {\n      setEmail(email);\n      debounceSearchEmail.current(email);\n    }\n  }, [email]);\n\n  useEffect(() => {\n    return onUnmount;\n  }, []);\n\n  return (\n    <div>\n      <div className=\"form__container\">\n        <Container text>\n          <Grid container>\n            <Grid.Column>\n              <Form onSubmit={onEditProfile} className=\"form__form\">\n                <Form.Field required>\n                  <label>Username</label>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    defaultValue={loggedInUser.username}\n                    onChange={(e) => setUsername(e.target.value.toLowerCase())}\n                  />\n                </Form.Field>\n                {username == \"\" || username == undefined ? (\n                  \"\"\n                ) : username == \"isUser\" ? (\n                  <p className=\"form__alert\">\n                    Username is unavailable, please choose another!\n                  </p>\n                ) : (\n                  <p className=\"form__available\">Username available!</p>\n                )}\n                <Form.Field>\n                  <label>Email</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    defaultValue={loggedInUser.email}\n                    onChange={(e) => setEmail(e.target.value.toLowerCase())}\n                  />\n                </Form.Field>\n                {email == \"\" || email == undefined ? (\n                  \"\"\n                ) : email == \"isEmail\" ? (\n                  <p className=\"form__alert\">\n                    Email is unavailable, please choose another!\n                  </p>\n                ) : (\n                  <p className=\"form__available\">Email available!</p>\n                )}\n\n                <Form.Field>\n                  <label>Bio</label>\n                  <TextArea\n                    type=\"text\"\n                    name=\"bio\"\n                    defaultValue={loggedInUser.bio}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Location</label>\n                  <input\n                    type=\"text\"\n                    name=\"location\"\n                    defaultValue={loggedInUser.location}\n                  />\n                </Form.Field>\n\n                <Grid container columns={2} stackable>\n                  <Grid.Column>\n                    <Form.Field>\n                      <label>Profile Image</label>\n                      <Input type=\"file\" name=\"imageProfile\" />\n                    </Form.Field>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Form.Field>\n                      <label>Background Image</label>\n                      <Input type=\"file\" name=\"imageBg\" />\n                    </Form.Field>\n                  </Grid.Column>\n                </Grid>\n\n                <div className=\"itemDetail__btn profile__btn__container\">\n                  <Button\n                    className=\"form__button goback \"\n                    animated\n                    type=\"submit\"\n                    secondary\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"edit outline\" />\n                    </Button.Content>\n                    <Button.Content visible>Update</Button.Content>\n                  </Button>\n                </div>\n              </Form>\n              <div className=\"form__testMode__container goback\">\n                <Button\n                  className=\"profile__inbox goback\"\n                  animated\n                  secondary\n                  onClick={() => {\n                    onGoBack();\n                  }}\n                >\n                  <Button.Content hidden>\n                    <Icon name=\"hand point left outline large\" />\n                  </Button.Content>\n                  <Button.Content visible>Go Back</Button.Content>\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default UserEdit;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Button,\n  Message,\n  Form,\n  Icon,\n  TextArea,\n  Input,\n  Select,\n} from \"semantic-ui-react\";\nimport \"./styles/Form.scss\";\n\nconst ItemUpload = ({\n  loggedInUser,\n  onCreateItem,\n  onEditItem,\n  onDeleteItem,\n  onGoBack,\n}) => {\n  // const [userItem, setUserItem] = useState(null);\n  // useEffect(() => {\n  //   axios\n  //     .get(`${API_URL}/item/${loggedInUser.item}`, { withCredentials: true })\n  //     .then((response) => {\n  //       setUserItem(response.data);\n  //     });\n  // }, []);\n\n  return (\n    <div>\n      {/* <form onSubmit={!loggedInUser.item ? onCreateItem : onEditItem}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          defaultValue={loggedInUser.item ? loggedInUser.item.name : null}\n        />\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          defaultValue={\n            loggedInUser.item ? loggedInUser.item.description : null\n          }\n        />\n        <input\n          type=\"text\"\n          name=\"condition\"\n          defaultValue={loggedInUser.item ? loggedInUser.item.condition : null}\n        />\n\n        <input\n          type=\"text\"\n          name=\"image\"\n          defaultValue={loggedInUser.item ? loggedInUser.item.image : null}\n        />\n        <button type=\"submit\">\n          {!loggedInUser.item ? <p>Upload</p> : <p>Edit</p>}\n        </button>\n      </form> */}\n\n      <div className=\"form__container\">\n        <Container text>\n          <Grid container>\n            <Grid.Column>\n              <Form\n                onSubmit={!loggedInUser.item ? onCreateItem : onEditItem}\n                className=\"form__form\"\n              >\n                <Form.Field required>\n                  <label>Item Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    defaultValue={\n                      loggedInUser.item ? loggedInUser.item.name : null\n                    }\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Description</label>\n                  <TextArea\n                    type=\"text\"\n                    name=\"description\"\n                    defaultValue={\n                      loggedInUser.item ? loggedInUser.item.description : null\n                    }\n                  />\n                </Form.Field>\n\n                <label>Condition</label>\n\n                <Form.Field\n                  placeholder=\"Select item's condition\"\n                  control=\"select\"\n                  name=\"condition\"\n                >\n                  <option value=\"Very good\">Very good</option>\n                  <option value=\"Normal\">Normal</option>\n                  <option value=\"So so\">So so</option>\n                  <option value=\"Damaged\">Damaged</option>\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Item Image</label>\n                  <Input type=\"file\" name=\"image\" />\n                </Form.Field>\n\n                <div className=\"itemDetail__btn profile__btn__container\">\n                  <Button\n                    className=\"form__button goback \"\n                    animated\n                    type=\"submit\"\n                    secondary\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"edit outline\" />\n                    </Button.Content>\n                    <Button.Content visible>Update</Button.Content>\n                  </Button>\n                </div>\n              </Form>\n              <div className=\"form__testMode__container goback\">\n                <Button\n                  className=\"profile__inbox goback\"\n                  animated\n                  secondary\n                  onClick={() => {\n                    onGoBack();\n                  }}\n                >\n                  <Button.Content hidden>\n                    <Icon name=\"hand point left outline large\" />\n                  </Button.Content>\n                  <Button.Content visible>Go Back</Button.Content>\n                </Button>\n              </div>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </div>\n\n      {loggedInUser.item ? (\n        <>\n          <button\n            onClick={() => {\n              onDeleteItem(loggedInUser.item._id);\n            }}\n          >\n            <p>Delete</p>\n          </button>\n        </>\n      ) : null}\n\n      <Link to={`/user/${loggedInUser}`}>X</Link>\n    </div>\n  );\n};\n\nexport default ItemUpload;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"./styles/Items.scss\";\nimport { API_URL } from \"../config\";\n\nconst ItemsRadom = ({ items }) => {\n  const [randomItems, setRandomItems] = useState([]);\n\n  useEffect(() => {\n    // axios\n    //   .get(`${API_URL}/items/random`)\n    //   .then((response) => {\n    //     setRandomItems(response.data);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n    const randomNum = (max, min) =>\n      Math.floor(Math.random() * (max - min + 1) + min);\n\n    let newRandomItems = [];\n    for (let i = 0; i < 3; i++) {\n      newRandomItems.push(items[randomNum(items.length - 1, 0)]);\n    }\n    setRandomItems(newRandomItems);\n  }, []);\n\n  return (\n    <>\n      {!items.length ? (\n        <p>There's no item uploaded yet</p>\n      ) : (\n        <Carousel\n          showArrows={true}\n          showStatus={false}\n          showThumbs={false}\n          thumbWidth={false}\n          infiniteLoop\n          autoPlay\n        >\n          {randomItems.map((item) => {\n            return (\n              <div >\n                <Link to={`item/${item._id}`} key={item._id}>\n                  <div>\n                    <img\n                      src={item.image}\n                      alt=\"random__item\"\n                      className=\"random__image\"\n                    />\n                  </div>\n                    <p className=\"legend\" id=\"random__text\">\n                      {item.name}\n                    </p>\n                </Link>\n              </div>\n            );\n          })}\n        </Carousel>\n      )}\n    </>\n  );\n};\n\nexport default ItemsRadom;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Grid, Icon, Card } from \"semantic-ui-react\";\nimport \"./styles/Items.scss\";\n\nimport { API_URL } from \"../config\";\n\nconst ItemsLatest = ({ items }) => {\n  const [latestItems, setLatestItems] = useState([]);\n\n  useEffect(() => {\n    // axios\n    //   .get(`${API_URL}/items/latest`)\n    //   .then((response) => {\n    //     setLatestItems(response.data);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n    let sorted = items.sort((a, b) => {\n      return a.updatedAt - b.updatedAt;\n    });\n    if (items.length > 7) {\n      setLatestItems(sorted.slice(0, 6));\n    } else {\n      setLatestItems(sorted);\n    }\n  }, []);\n\n  return (\n    <>\n      {!items.length ? (\n        <p>There's no item uploaded yet</p>\n      ) : (\n        <div className=\"items__container\">\n          <Container>\n            <Grid columns={2} container divided=\"vertically\" stackable>\n              <Grid.Row>\n                <Grid.Column floated=\"left\" width={5} textAlign=\"center\">\n                  <h1>Latest Items</h1>\n                </Grid.Column>\n                <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                  <Link to=\"/item-list\">\n                    <Icon name=\"ellipsis horizontal large\" />\n                  </Link>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n\n            <Grid container columns={3} doubling stackable>\n              {latestItems.map((item) => {\n                return (\n                  <Grid.Column\n                    className=\"latest__grid\"\n                    as={Link}\n                    to={`item/${item._id}`}\n                  >\n                    <Card key={item._id}>\n                      <img\n                        src={item.image}\n                        style={{\n                          width: \"100%\",\n                          height: \"200px\",\n                          objectFit: \"cover\",\n                        }}\n                      />\n                      <Card.Content>\n                        <Card.Header>\n                          {item.name.length >= 20\n                            ? item.name.slice(0, 20) + \"...\"\n                            : item.name}\n                        </Card.Header>\n                        <Card.Meta>{item.user.username}</Card.Meta>\n                        <Card.Description>\n                          {item.description.length >= 70\n                            ? item.description.slice(0, 70) + \"...\"\n                            : item.description}\n                        </Card.Description>\n                      </Card.Content>\n                      <Card.Content extra>\n                        <Link to={`item/${item._id}`}>Read more</Link>\n                      </Card.Content>\n                    </Card>\n                  </Grid.Column>\n                );\n              })}\n            </Grid>\n          </Container>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ItemsLatest;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Item, Image, Grid } from \"semantic-ui-react\";\nimport \"./styles/Items.scss\";\n\nimport { API_URL } from \"../config\";\n\nconst ItemsLocation = ({ loggedInUser, items }) => {\n  const [locationItems, setLocationItems] = useState([]);\n\n  useEffect(() => {\n    // axios\n    //   .get(`${API_URL}/items/location`, { withCredentials: true })\n    //   .then((response) => {\n    //     setLocationItems(response.data);\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n    let sorted = items.filter((item) => {\n      return loggedInUser.location == item.user.location;\n    });\n    if (items.length > 4) {\n      setLocationItems(sorted.slice(0, 4));\n    } else {\n      setLocationItems(sorted);\n    }\n  }, []);\n\n  return (\n    <>\n      {!items.length ? (\n        <p>There's no item uploaded yet</p>\n      ) : (\n        <div>\n          <Container className=\"location__header__container\">\n            <h1 className=\"location__header\">Near to your place</h1>\n          </Container>\n\n          <Container text>\n            <Grid columns={1} container divided=\"vertically\" stackable>\n              <Grid.Row>\n                <Item.Group divided>\n                  {locationItems.map((item, i) => {\n                    return (\n                      <>\n                        {i % 2 ? (\n                          <Item>\n                            <Item.Content>\n                              <Item.Header as={Link} to={`item/${item._id}`}>\n                                {item.name}\n                              </Item.Header>\n                              <Item.Meta>\n                                <span>{item.user.location}</span>\n                              </Item.Meta>\n                              <Item.Description>\n                                {item.description}\n                              </Item.Description>\n                              <Item.Extra>\n                                <Link to={`/public/${item.user._id}`}>\n                                  <Image\n                                    avatar\n                                    circular\n                                    src={item.user.imageProfile}\n                                  />\n                                  {item.user.username}\n                                </Link>\n                              </Item.Extra>\n                            </Item.Content>\n                            <Item.Image\n                              src={item.image}\n                              as={Link}\n                              to={`item/${item._id}`}\n                            />\n                          </Item>\n                        ) : (\n                          <Item>\n                            <Item.Image\n                              src={item.image}\n                              as={Link}\n                              to={`item/${item._id}`}\n                            />\n\n                            <Item.Content>\n                              <Item.Header as={Link} to={`item/${item._id}`}>\n                                {item.name}\n                              </Item.Header>\n                              <Item.Meta>\n                                <span>{item.user.location}</span>\n                              </Item.Meta>\n                              <Item.Description>\n                                {item.description}\n                              </Item.Description>\n                              <Item.Extra>\n                                <Link to={`/public/${item.user._id}`}>\n                                  <Image\n                                    avatar\n                                    circular\n                                    src={item.user.imageProfile}\n                                  />\n                                  {item.user.username}\n                                </Link>\n                              </Item.Extra>\n                            </Item.Content>\n                          </Item>\n                        )}\n                      </>\n                    );\n                  })}\n                </Item.Group>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ItemsLocation;\n","import React, { useEffect } from \"react\";\n\nimport { Container, Divider } from \"semantic-ui-react\";\nimport ItemsRandom from \"../components/ItemsRadom\";\nimport ItemsLatest from \"../components/ItemsLatest\";\nimport ItemsLocation from \"../components/ItemsLocation\";\n\nconst Home = ({ loggedInUser, items }) => {\n  return (\n    <>\n      <Container>\n        <ItemsRandom items={items} />\n      </Container>\n      <div>\n        <ItemsLatest items={items} />\n      </div>\n      <Container >\n        <Divider />\n      </Container>\n      <Container>\n        <ItemsLocation items={items} loggedInUser={loggedInUser} />\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport {  Input, Grid } from \"semantic-ui-react\";\n\nconst Search = ({ onQuickSearch, onSearch }) => {\n  return (\n    <Grid container columns={1}  relaxed stackable>\n      <Grid.Column>\n        <form onSubmit={onSearch}>\n          <Input\n            name=\"keyWord\"\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={onQuickSearch}\n            icon={{ name: 'search', circular: true, link: true, type: 'submit',}}\n          />\n        </form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Card, Grid } from \"semantic-ui-react\";\n\nimport SearchForm from \"./SearchForm\";\n\nconst ItemsList = ({ items, onQuickSearch, onSearch }) => {\n  return (\n    <Container className=\"itemList__container\">\n      <Grid columns={2} container divided=\"vertically\" stackable>\n        <Grid.Row>\n          <Grid.Column floated=\"left\" width={5} textAlign=\"center\">\n            <h1>All Items</h1>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n            <SearchForm onQuickSearch={onQuickSearch} onSearch={onSearch} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Grid container columns={3} doubling stackable>\n        {items.map((item) => {\n          return (\n            <Grid.Column\n              className=\"latest__grid\"\n              as={Link}\n              to={`item/${item._id}`}\n            >\n              <Card key={item._id}>\n                <img\n                  src={item.image}\n                  style={{ width: \"100%\", height: \"200px\", objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header>\n                    {item.name.length >= 20\n                      ? item.name.slice(0, 20) + \"...\"\n                      : item.name}\n                  </Card.Header>\n                  <Card.Meta>{item.user.username}</Card.Meta>\n                  <Card.Description>\n                    {item.description.length >= 70\n                      ? item.description.slice(0, 70) + \"...\"\n                      : item.description}\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Link to={`item/${item._id}`}>Read more</Link>\n                </Card.Content>\n              </Card>\n            </Grid.Column>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ItemsList;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Button,\n  Grid,\n  Header,\n  Icon,\n  Image,\n} from \"semantic-ui-react\";\nimport \"./styles/Items.scss\";\nimport { API_URL } from \"../config\";\n\nconst ItemDetail = (props) => {\n  const { onGoBack } = props;\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    let itemId = props.match.params.itemId;\n\n    axios\n      .get(`${API_URL}/item/${itemId}`)\n      .then((response) => {\n        setItem(response.data);\n        console.log(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      {!item ? (\n        <p>Loading</p>\n      ) : (\n        <>\n          <Container\n            style={{ marginTop: \"30px\", maxHeight: \"500px\", objectFit: \"contain\", marginBottom:'20px'}}\n          >\n            <div className=\"itemDetail__img__container\">\n              <img\n                src={item.image}\n                alt=\"itemDetail__img\"\n                className=\"itemDetail__img\"\n              />\n            </div>\n          </Container>\n\n          <Container text>\n            {item.user.location ? (\n              <Grid>\n                <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                  <p className=\"itemDetail__location\">\n                    <Icon name=\"map marker alternate\" />\n                    {item.user.location}\n                  </p>\n                </Grid.Column>\n              </Grid>\n            ) : (\n              <Grid.Column floated=\"right\" width={5} textAlign=\"center\">\n                <p className=\"itemDetail__location\">\n                  <Icon name=\"map marker alternate\" />\n                  <span>No location provided</span>\n                </p>\n              </Grid.Column>\n            )}\n            <Header as=\"h2\">{item.name}</Header>\n\n            <Grid>\n              <Grid.Column floated=\"left\" width={5}>\n                <Link to={`/public/${item.user._id}`}>\n                  <Image avatar circular src={item.user.imageProfile} />\n                  <span>{item.user.username}</span>\n                </Link>{\" \"}\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={5}>\n                <p>{item.condition}</p>\n              </Grid.Column>\n            </Grid>\n\n            <p className=\"itemDetail__description\">{item.description}</p>\n            <Container>\n              <Grid columns={1} ui centered grid stackable>\n                <Grid.Row>\n                  <div className=\"itemDetail__btn\">\n                    <Button\n                      className=\"profile__inbox goback\"\n                      animated\n                      secondary\n                      onClick={() => {\n                        onGoBack();\n                      }}\n                    >\n                      <Button.Content hidden>\n                        <Icon name=\"hand point left outline large\" />\n                      </Button.Content>\n                      <Button.Content visible>Go Back</Button.Content>\n                    </Button>\n                  </div>\n                </Grid.Row>\n              </Grid>\n            </Container>\n          </Container>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ItemDetail;\n","import React from \"react\";\nimport { Form, Input, Grid, Button, Icon } from \"semantic-ui-react\";\nimport \"./styles/Inbox.scss\";\n\nconst MessageForm = ({ onSend }) => {\n  return (\n    <div className=\"inbox__messageForm\">\n      <form\n        onSubmit={(event) => {\n          onSend(event);\n        }}\n        className=\"message__form\"\n      >\n        {/* <Form.Field> */}\n          <Input\n            type=\"text\"\n            name=\"body\"\n            className=\"inbox__messageForm__input\"\n          />\n        {/* </Form.Field>\n        <Form.Field> */}\n          <Button\n            type=\"submit\"\n            className=\"inbox__messageForm__btn\"\n          ><Icon name='send'/></Button>\n        {/* </Form.Field> */}\n      </form>\n    </div>\n  );\n};\n\nexport default MessageForm;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { List, Button, Image, Icon } from \"semantic-ui-react\";\n\nimport { API_URL } from \"../config\";\nimport MessageForm from \"./MessageForm\";\nimport \"./styles/Inbox.scss\";\n\nconst Chat = (props) => {\n  const {\n    loggedInUser,\n    onGoBack,\n    onSend,\n    initialChat,\n    initialAccepted,\n    selectedUser,\n  } = props;\n  // let userId = match.params.userId;\n  const [chat, setChat] = useState(initialChat);\n  const [accepted, setAccepted] = useState(null);\n  const [item, setItem] = useState(null);\n\n  let chatCheck = !chat ? initialChat : chat;\n  let acceptedStatus = accepted == null ? initialAccepted : accepted;\n  console.log(selectedUser);\n  // useEffect(() => {\n  //   axios\n  //     .get(`${API_URL}/chat/${userId}`, { withCredentials: true })\n  //     .then((response) => {\n  //       setChat(response.data);\n  //       axios\n  //       .get(`${API_URL}/item/${loggedInUser.item}`, { withCredentials: true })\n  //       .then((response) => {\n  //         setAccepted(response.data.accepted);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n\n  // }, []);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n\n    const { body } = e.target;\n    axios\n      .post(\n        `${API_URL}/send/${selectedUser._id}`,\n        {\n          body: body.value,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        setChat(response.data);\n        console.log(response.data);\n      });\n  };\n\n  const handleAccept = (userId) => {\n    axios\n      .post(`${API_URL}/item/${userId}/accept`, {}, { withCredentials: true })\n      .then((response) => {\n        setAccepted(true);\n        console.log(response.data);\n      });\n  };\n\n  const handleRevoke = (userId) => {\n    axios\n      .post(`${API_URL}/item/${userId}/revoke`, {}, { withCredentials: true })\n      .then((response) => {\n        setAccepted(false);\n        console.log(response.data);\n      });\n  };\n\n  return (\n    <div>\n      {!chatCheck ? (\n        <div className=\"chat__noChat\">\n          <p className=\"chat__noChat__text\">Please select conversation</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"inbox__chatBox__header\">\n            <List divided relaxed style={{ marginTop: \"20px\" }}>\n              <List.Item>\n                <Image avatar src={selectedUser.imageProfile} />\n                <List.Content>\n                  <List.Header as=\"h3\">{selectedUser.username}</List.Header>\n                </List.Content>\n              </List.Item>\n            </List>\n            {!acceptedStatus ? (\n              <div>\n                <Button\n                  className=\"form__button goback\"\n                  animated\n                  type=\"submit\"\n                  secondary\n                  onClick={() => {\n                    handleAccept(selectedUser._id);\n                  }}\n                >\n                  <Button.Content hidden>\n                    <Icon name=\"check square outline\" />\n                  </Button.Content>\n                  <Button.Content visible>Accept</Button.Content>\n                </Button>\n              </div>\n            ) : (\n              <div className=\"inbox__chatBox__revoke\">\n                <Button\n                  className=\"form__button goback\"\n                  animated\n                  type=\"submit\"\n                  color=\"google plus\"\n                  onClick={() => {\n                    handleRevoke(selectedUser._id);\n                  }}\n                >\n                  <Button.Content hidden>\n                    <Icon name=\"cancel\" />\n                  </Button.Content>\n                  <Button.Content visible>Revoke</Button.Content>\n                </Button>\n                <p>You accepted to exchange!</p>\n              </div>\n            )}\n          </div>\n          <div className=\"inbox__chatBox__container\">\n            {chatCheck.map((message, i) => {\n              return (\n                <>\n                  {message.from._id == loggedInUser._id ? (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"flex-end\",\n                      }}\n                      key={message._id + i}\n                      className=\"inbox__me\"\n                    >\n                      <div className=\"inbox__entete\">\n                        <h2>{message.from.username}</h2>\n                      </div>\n                      <div className=\"inbox__triangle\"></div>\n                      <p className=\"inbox__text\">{message.body}</p>\n                    </div>\n                  ) : (\n                    <div key={message._id + i} className=\"inbox__you\">\n                      <div className=\"inbox__entete\">\n                        <h2>{message.from.username}</h2>\n                      </div>\n                      <div className=\"inbox__triangle\"></div>\n                      <p className=\"inbox__text\">{message.body}</p>\n                    </div>\n                  )}\n                </>\n              );\n            })}\n          </div>\n        </>\n      )}\n      <MessageForm onSend={handleSend} />\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  List,\n  Container,\n  Image,\n  Grid,\n  Divider,\n  Button,\n} from \"semantic-ui-react\";\nimport \"./styles/Inbox.scss\";\n\nimport Chat from \"../components/Chat\";\nimport { API_URL } from \"../config\";\n\nconst Inbox = ({ loggedInUser, onSelectedUserMobile, onGoBack }) => {\n  const [messages, setMessages] = useState([]);\n  const [chat, setChat] = useState(null);\n  const [accepted, setAccepted] = useState(null);\n  // const [item, setItem] = useState(null);\n  const [selectedUser, setSelectedUser] = useState({});\n  useEffect(() => {\n    axios\n      .get(`${API_URL}/inbox`, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(\"This is messages request\", response.data);\n        console.log(response.data[0].from);\n        setMessages(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleSelectUser = (userId) => {\n    axios\n      .get(`${API_URL}/chat/${userId}`, { withCredentials: true })\n      .then((response) => {\n        console.log(\"This is handleSelectUser\", response.data[0].from);\n        setChat(response.data);\n        setSelectedUser(\n          response.data[0].from._id == loggedInUser._id\n            ? response.data[1].from\n            : response.data[0].from\n        );\n        axios\n          .get(`${API_URL}/item/${loggedInUser.item._id}`, {\n            withCredentials: true,\n          })\n          .then((response) => {\n            setAccepted(response.data.accepted);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // console.log(selectedUser, chat);\n  return (\n    <div>\n      <div className=\"inbox__container\">\n        <div className=\"inbox__userList\">\n          <Grid columns={1}>\n            <Grid.Column width={16}>\n              <List divided relaxed size=\"big\">\n                <div className=\"inbox__header\">\n                  <button onClick={onGoBack} className=\"inbox__btn\">\n                    <h2>Inbox</h2>\n                  </button>\n                </div>\n                {messages.map((chat, i) => {\n                  return (\n                    <List.Item key={i} className=\"inbox__fromList__user\">\n                      <Image avatar src={chat.from.imageProfile} />\n                      <List.Content>\n                        <List.Header\n                          as=\"button\"\n                          onClick={() => {\n                            handleSelectUser(chat.from._id);\n                          }}\n                          className=\"inbox__btn\"\n                        >\n                          <p>{chat.from.username}</p>\n                        </List.Header>\n                        <List.Description as=\"a\">\n                          <p className=\"inbox__userList__text\">{chat.body}</p>\n                        </List.Description>\n                      </List.Content>\n                    </List.Item>\n                  );\n                })}\n              </List>\n            </Grid.Column>\n          </Grid>\n        </div>\n        <div className=\"inbox__chatBox\">\n          <Chat\n            initialChat={chat}\n            initialAccepted={accepted}\n            loggedInUser={loggedInUser}\n            selectedUser={selectedUser}\n          />\n        </div>\n      </div>\n      <div className=\"inbox__mobile__container\">\n        <Grid centered columns={2}>\n          <div className=\"inbox__mobile__header\">\n            <button onClick={onGoBack} className=\"inbox__btn\">\n              <h1>Inbox</h1>\n            </button>\n          </div>\n          {!messages.length ? (\n            <h3 className=\"chat__noChat__text chat__noChat\">\n              There's no message...\n            </h3>\n          ) : (\n              <Grid.Column width={16} >\n                <List divided relaxed size=\"huge\">\n                  {messages.map((chat, i) => {\n                    return (\n                      <>\n                        <List.Item className=\"inbox__mobile__fromList\" key={i}>\n                          <Image avatar src={chat.from.imageProfile} />\n                          <List.Content className=\"inbox__mobile__fromList__content\">\n                            <List.Header\n                              as=\"button\"\n                              onClick={() => {\n                                onSelectedUserMobile(chat.from._id);\n                              }}\n                              style={{ textAlign: \"left\" }}\n                              className=\"inbox__mobile__btn\"\n                            >\n                              {chat.from.username}\n                            </List.Header>\n                            <List.Description\n                              as=\"button\"\n                              onClick={() => {\n                                onSelectedUserMobile(chat.from._id);\n                              }}\n                              className=\"inbox__mobile__btn\"\n                            >\n                              {chat.bodylength >= 20\n                                ? chat.body.slice(0, 20) + \"...\"\n                                : chat.body}\n                            </List.Description>\n                          </List.Content>\n                        </List.Item>\n                      </>\n                    );\n                  })}\n                </List>\n              </Grid.Column>\n          )}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default Inbox;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { List, Button, Image, Icon } from \"semantic-ui-react\";\n\nimport { API_URL } from \"../config\";\nimport MessageForm from \"./MessageForm\";\nimport \"./styles/Inbox.scss\";\n\nconst Chat = (props) => {\n  const {\n    loggedInUser,\n    onGoBack,\n    initialChat,\n    initialAccepted,\n    selectedUser,\n  } = props;\n  // let userId = match.params.userId;\n  const [chat, setChat] = useState(initialChat);\n  const [accepted, setAccepted] = useState(null);\n  const [receiver, setReceiver] = useState(null);\n  const [item, setItem] = useState(null);\n\n  let chatCheck = !chat ? initialChat : chat;\n  let acceptedStatus = accepted == null ? initialAccepted : accepted;\n\n  console.log(selectedUser);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    console.log(selectedUser);\n\n    const { body } = e.target;\n    axios\n      .post(\n        `${API_URL}/send/${selectedUser._id}`,\n        {\n          body: body.value,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        setReceiver(selectedUser);\n        setChat(response.data);\n      });\n  };\n\n  const handleAccept = (userId) => {\n    axios\n      .post(`${API_URL}/item/${userId}/accept`, {}, { withCredentials: true })\n      .then((response) => {\n        setAccepted(true);\n        console.log(response.data);\n      });\n  };\n\n  const handleRevoke = (userId) => {\n    axios\n      .post(`${API_URL}/item/${userId}/revoke`, {}, { withCredentials: true })\n      .then((response) => {\n        setAccepted(false);\n        console.log(response.data);\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"chat__mobile__container\">\n        {!chatCheck ? (\n          <div className=\"chat__noChat\">\n            <p className=\"chat__noChat__text\">Please select conversation</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"chat__mobile__header\">\n              <List divided relaxed style={{ marginTop: \"20px\" }}>\n                <List.Item>\n                  <Image\n                    avatar\n                    src={\n                      !selectedUser\n                        ? receiver.imageProfile\n                        : selectedUser.imageProfile\n                    }\n                    size=\"tiny\"\n                  />\n                </List.Item>\n              </List>\n              {!acceptedStatus ? (\n                <div  className='inbox__chatBox__header__btn'>\n                  <Button\n                    animated\n                    type=\"submit\"\n                    secondary\n                    onClick={() => {\n                      handleAccept(selectedUser._id);\n                    }}\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"check square outline\" />\n                    </Button.Content>\n                    <Button.Content visible>Accept</Button.Content>\n                  </Button>\n                </div>\n              ) : (\n                <div className='inbox__chatBox__header__btn'>\n                  <Button\n                    animated\n                    type=\"submit\"\n                    color=\"google plus\"\n                    onClick={() => {\n                      handleRevoke(selectedUser._id);\n                    }}\n                  >\n                    <Button.Content hidden>\n                      <Icon name=\"cancel\" />\n                    </Button.Content>\n                    <Button.Content visible>Revoke</Button.Content>\n                  </Button>\n                </div>\n              )}\n            </div>\n            <div className=\"inbox__chatBox__container\">\n              {chatCheck.map((message, i) => {\n                return (\n                  <>\n                    {message.from._id == loggedInUser._id ? (\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          alignItems: \"flex-end\",\n                        }}\n                        key={message._id + i}\n                        className=\"inbox__me\"\n                      >\n                        <div className=\"inbox__entete\">\n                          <h2>{message.from.username}</h2>\n                        </div>\n                        <div className=\"inbox__triangle\"></div>\n                        <p className=\"inbox__text\">{message.body}</p>\n                      </div>\n                    ) : (\n                      <div key={message._id + i} className=\"inbox__you\">\n                        <div className=\"inbox__entete\">\n                          <h2>{message.from.username}</h2>\n                        </div>\n                        <div className=\"inbox__triangle\"></div>\n                        <p className=\"inbox__text\">{message.body}</p>\n                      </div>\n                    )}\n                  </>\n                );\n              })}\n            </div>\n          </>\n        )}\n        <MessageForm\n          selectedUserId={!selectedUser ? receiver._id : selectedUser._id}\n          onSend={handleSend}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n\n","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.scss\";\nimport { API_URL } from \"./config\";\n\nimport Nav from \"./components/Nav\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport Landing from \"./components/Landing\";\nimport UserProfile from \"./components/UserProfile\";\nimport UserPublic from \"./components/UserPublic\";\nimport UserCreate from \"./components/UserCreate\";\nimport UserEdit from \"./components/UserEdit\";\nimport ItemUpload from \"./components/ItemUpload\";\nimport Home from \"./components/Home\";\nimport ItemsList from \"./components/ItemsList\";\nimport ItemDetail from \"./components/ItemDetail\";\nimport Inbox from \"./components/Inbox\";\nimport Chat from \"./components/Chat\";\nimport ChatMobile from \"./components/ChatMobile\";\n\nclass App extends Component {\n  state = {\n    loggedInUser: null,\n    errorMessage: null,\n    items: [],\n    cloneItems: [],\n    chat: [],\n    selectedUser: null,\n    accepted: null,\n  };\n\n  componentDidMount() {\n    axios\n      .get(`${API_URL}/items`, { withCredentials: true })\n      .then((response) => {\n        console.log(\"This is items request\", response.data);\n\n        this.setState({ items: response.data });\n        this.setState({ cloneItems: response.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n    const { username, email, password } = e.target;\n\n    axios\n      .post(\n        `${API_URL}/signup`,\n        {\n          username: username.value,\n          email: email.value,\n          password: password.value,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.setState(\n          {\n            loggedInUser: response.data,\n          },\n          () => {\n            this.props.history.push(\"user/create\");\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data.errorMessage);\n        this.setState({ errorMessage: err.response.data.errorMessage });\n      });\n  };\n\n  handleSignIn = (e) => {\n    e.preventDefault();\n\n    const { email, password } = e.target;\n    axios\n      .post(\n        `${API_URL}/signin`,\n        {\n          email: email.value,\n          password: password.value,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.setState(\n          {\n            loggedInUser: response.data,\n          },\n          () => {\n            this.props.history.push(\"/home\");\n          }\n        );\n      })\n      .catch((err) => {\n        this.setState({ errorMessage: err.response.data.error });\n      });\n  };\n\n  handleTestMode = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(`${API_URL}/signin-test`, {}, { withCredentials: true })\n      .then((response) => {\n        this.setState(\n          {\n            loggedInUser: response.data,\n          },\n          () => {\n            this.props.history.push(\"/home\");\n          }\n        );\n      });\n    // .catch((err) => {\n    //   this.setState({ errorMessage: err.response.data.error });\n    // });\n  };\n\n  handleLogOut = (e) => {\n    e.preventDefault();\n    axios.post(`${API_URL}/logout`, {}, { withCredentials: true }).then(() => {\n      this.setState(\n        {\n          loggedInUser: null,\n        },\n        () => {\n          this.props.history.push(\"/\");\n        }\n      );\n    });\n  };\n\n  handleUnmount = () => {\n    this.setState({\n      errorMessage: null,\n    });\n  };\n\n  handleCleanError = (e) => {\n    this.setState({\n      errorMessage: null,\n    });\n  };\n\n  handleEditProfile = (e) => {\n    e.preventDefault();\n    const { bio, location, imageProfile, imageBg, username, email } = e.target;\n\n    let imageProfFile = imageProfile.files[0];\n    let uploadProfForm = new FormData();\n    uploadProfForm.append(\"imageUrl\", imageProfFile);\n\n    let imageBgFile = imageBg.files[0];\n    let uploadBgForm = new FormData();\n    uploadBgForm.append(\"imageUrl\", imageBgFile);\n\n    axios.post(`${API_URL}/upload`, uploadProfForm).then((responseProf) => {\n      axios.post(`${API_URL}/upload`, uploadBgForm).then((responseBg) => {\n        let newProfile = {\n          username: username\n            ? username.value\n            : this.state.loggedInUser.username,\n          email: email ? email.value : this.state.loggedInUser.email,\n          bio: bio.value,\n          location: location.value,\n          imageProfile: responseProf.data.image,\n          imageBg: responseBg.data.image,\n        };\n        axios\n          .patch(`${API_URL}/user-edit`, newProfile, { withCredentials: true })\n          .then((response) => {\n            console.log(response.data);\n            this.props.history.push(`/user/${this.state.loggedInUser._id}`);\n          })\n        .catch((err) => {\n          this.setState({ errorMessage: err.response.data.error });\n        });\n      });\n    });\n  };\n\n  handleCreateItem = (e) => {\n    e.preventDefault();\n    const { name, description, condition, image } = e.target;\n\n    let imageFile = image.files[0];\n    let uploadForm = new FormData();\n    uploadForm.append(\"imageUrl\", imageFile);\n    axios.post(`${API_URL}/upload`, uploadForm).then((response) => {\n      let newItem = {\n        name: name.value,\n        description: description.value,\n        condition: condition.value,\n        image: response.data.image,\n      };\n      axios\n        .post(`${API_URL}/item-create`, newItem, { withCredentials: true })\n        .then(() => {\n          axios\n            .get(`${API_URL}/user/${this.state.loggedInUser._id}`, {\n              withCredentials: true,\n            })\n            .then((response) => {\n              let items = response.data;\n              axios\n                .get(`${API_URL}/user/${this.state.loggedInUser._id}`, {\n                  withCredentials: true,\n                })\n                .then((response) => {\n                  let userData = response.data;\n                  this.setState(\n                    { loggedInUser: userData, items: items },\n                    () => {\n                      this.props.history.push(\n                        `/user/${this.state.loggedInUser._id}`\n                      );\n                    }\n                  );\n                });\n            });\n        })\n        .catch((err) => {\n          console.log(err.response.data.errorMessage);\n          this.setState({ errorMessage: err.response.data.errorMessage });\n        });\n    });\n  };\n\n  handleEditItem = (e) => {\n    e.preventDefault();\n    const { name, description, condition, image } = e.target;\n\n    let imageFile = image.files[0];\n    let uploadForm = new FormData();\n    uploadForm.append(\"imageUrl\", imageFile);\n    axios.post(`${API_URL}/upload`, uploadForm).then((response) => {\n      let newItem = {\n        name: name.value,\n        description: description.value,\n        condition: condition.value,\n        image: response.data.image,\n      };\n      axios\n        .patch(`${API_URL}/item-edit`, newItem, { withCredentials: true })\n        .then((response) => {\n          let items = response.data;\n          axios\n            .get(`${API_URL}/user/${this.state.loggedInUser._id}`, {\n              withCredentials: true,\n            })\n            .then((response) => {\n              let userData = response.data;\n              this.setState({ loggedInUser: userData, items: items }, () => {\n                this.props.history.push(`/user/${this.state.loggedInUser._id}`);\n              });\n            });\n        })\n        .catch((err) => {\n          console.log(err);\n          // this.setState({ errorMessage: err.response.data.errorMessage });\n        });\n    });\n  };\n\n  handleDeleteItem = (itemId) => {\n    axios\n      .delete(`${API_URL}/item-delete/${itemId}`, { withCredentials: true })\n      .then((response) => {\n        let items = response.data;\n        axios\n          .get(`${API_URL}/user/${this.state.loggedInUser._id}`, {\n            withCredentials: true,\n          })\n          .then((response) => {\n            let userData = response.data;\n            this.setState({ loggedInUser: userData, items: items }, () => {\n              this.props.history.push(`/user/${this.state.loggedInUser._id}`);\n            });\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleGoBack = () => {\n    this.props.history.goBack();\n  };\n\n  handleQuickSearch = (e) => {\n    let searchInput = e.target.value.toLowerCase();\n    let filteredItems = this.state.items.filter((item) => {\n      return item.name.toLowerCase().startsWith(searchInput);\n    });\n    this.setState({ cloneItems: filteredItems });\n  };\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    let useInput = e.target.keyWord.value.toLowerCase();\n    axios.get(`${API_URL}/item-search/?q=${useInput}`).then((response) => {\n      this.setState({ cloneItems: response.data });\n    });\n  };\n\n  handleSelectUserMobile = (userId) => {\n    axios\n      .get(`${API_URL}/chat/${userId}`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          chat: response.data,\n          selectedUser: response.data[0].from._id == this.state.loggedInUser._id ? response.data[1].from : response.data[0].from,\n        });\n        axios\n          .get(`${API_URL}/item/${this.state.loggedInUser.item._id}`, {\n            withCredentials: true,\n          })\n          .then((response) => {\n\n            this.setState(\n              {\n                accepted: response.data.accepted,\n              },\n              () => {\n                this.props.history.push(`/mb/inbox/${userId}`);\n              }\n            );\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const {\n      loggedInUser,\n      errorMessage,\n      items,\n      cloneItems,\n      selectedUser,\n      accepted,\n      chat,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Nav loggedInUser={loggedInUser} onLogOut={this.handleLogOut} />\n        {/* {loggedInUser ? <h5>User is: {loggedInUser.username}</h5> : null} */}\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return <Landing />;\n            }}\n          />\n          <Route\n            path=\"/sign-up\"\n            render={(routeProps) => {\n              return (\n                <SignUp\n                  onSignUp={this.handleSignUp}\n                  {...routeProps}\n                  errorMessage={errorMessage}\n                  onUnmount={this.handleUnmount}\n                  onChange={this.handleCleanError}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/sign-in\"\n            render={(routeProps) => {\n              return (\n                <SignIn\n                  onSignIn={this.handleSignIn}\n                  {...routeProps}\n                  errorMessage={errorMessage}\n                  onUnmount={this.handleUnmount}\n                  onChange={this.handleCleanError}\n                  onTest={this.handleTestMode}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/user/create\"\n            render={() => {\n              return (\n                <UserCreate\n                  loggedInUser={loggedInUser}\n                  onEditProfile={this.handleEditProfile}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/user/edit\"\n            render={() => {\n              return (\n                <UserEdit\n                  loggedInUser={loggedInUser}\n                  onUnmount={this.handleUnmount}\n                  onEditProfile={this.handleEditProfile}\n                  onGoBack={this.handleGoBack}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/user/:userId\"\n            render={(routeProps) => {\n              return (\n                <UserProfile\n                  loggedInUser={loggedInUser}\n                  {...routeProps}\n                  onGoBack={this.handleGoBack}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/public/:userId\"\n            render={(routeProps) => {\n              return (\n                <UserPublic\n                  loggedInUser={loggedInUser}\n                  {...routeProps}\n                  onGoBack={this.handleGoBack}\n                />\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/upload-item\"\n            render={() => {\n              return (\n                <ItemUpload\n                  loggedInUser={loggedInUser}\n                  onCreateItem={this.handleCreateItem}\n                  onEditItem={this.handleEditItem}\n                  onDeleteItem={this.handleDeleteItem}\n                  onGoBack={this.handleGoBack}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/home\"\n            render={() => {\n              return <Home loggedInUser={loggedInUser} items={items} />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/item-list\"\n            render={() => {\n              return (\n                <ItemsList\n                  loggedInUser={loggedInUser}\n                  items={cloneItems}\n                  onQuickSearch={this.handleQuickSearch}\n                  onSearch={this.handleSearch}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/item/:itemId\"\n            render={(routeProps) => {\n              return (\n                <ItemDetail\n                  loggedInUser={loggedInUser}\n                  {...routeProps}\n                  onGoBack={this.handleGoBack}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/inbox\"\n            render={(routeProps) => {\n              return (\n                <Inbox\n                  loggedInUser={loggedInUser}\n                  {...routeProps}\n                  onGoBack={this.handleGoBack}\n                  onSelectedUserMobile={this.handleSelectUserMobile}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/inbox/:userId\"\n            render={(routeProps) => {\n              return (\n                <Chat\n                  loggedInUser={loggedInUser}\n                  {...routeProps}\n                  onGoBack={this.handleGoBack}\n                  // onSend={this.handleSend}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/mb/inbox/:userId\"\n            render={(routeProps) => {\n              return (\n                <ChatMobile\n                  loggedInUser={loggedInUser}\n                  {...routeProps}\n                  onGoBack={this.handleGoBack}\n                  initialChat={chat}\n                  selectedUser={selectedUser}\n                  initialAccepted={accepted}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}